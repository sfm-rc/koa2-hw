{"version":3,"sources":["../../src/controllers/noteCtrl.js"],"names":[],"mappings":"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","file":"noteCtrl.js","sourcesContent":["import {query} from '../models/db_connection';\nimport { pagination, getLinuxTimeStamp} from '../uitil';\n\n/**\n * 添加\n * @param {*} ctx\n * @param {*} next\n */\nconst add = async(ctx, next) => {\n  const params = ctx.request.body;\n  const {activity_id, user_name, cer_type, cer_id, sex, birth, mobile, e_contact, e_contact_mobile} = params;\n\n  const exit_sql = `select * from hw_insurance where activity_id='${activity_id}' and cer_id='${cer_id}'`;\n  const exit_data = await query(exit_sql);\n  if(exit_data.length>0){\n    ctx.body = {code: 1, message:'保单已经填写', exit_data}\n    return;\n  }\n  else {\n\n    const sql = `INSERT into hw_insurance VALUES(\n                NULL,'${activity_id}','${user_name}', '${cer_type}', '${cer_id}', '${sex}', '${birth}', '${mobile}', \n                '${e_contact}', '${e_contact_mobile}', '${getLinuxTimeStamp()}'\n            )`;\n    var data = await query(sql);\n    console.log('insert hw_insurance:', data);\n    ctx.body = {code: 0, message:'保单填写成功', data}\n  }\n}\n\n\n\n/**\n * 获取列表,管理后台使用\n * @param {*} ctx\n * @param {*} next\n */\nconst list_search = async (ctx, next) => {\n  const params = ctx.request.body\n  const {admin_id, activity_id, user_name, mobile, limit, pageIndex, type} = params\n  const where = {}\n  if (activity_id) {\n    where['activity_id'] = activity_id\n  }\n\n  if (user_name) {\n    where['user_name'] = user_name\n  }\n\n  if (mobile) {\n    where['mobile'] = mobile\n  }\n\n  let where_sql = ''\n  let first = true\n  for (let item in where) {\n    const value = where[item]\n    if (first) {\n      where_sql = `where A.${item} like \"%${value}%\"`\n      first = false\n    }\n    else {\n      where_sql = `${where_sql} and A.${item} like \"%${value}%\"`\n    }\n  }\n\n  let activities = []\n  if (admin_id && admin_id != 0) {\n    activities = await query(`select id from hw_activity where admin_id=${admin_id}`)\n    activities = activities.map(item => item.id)\n    console.log('activities', activities)\n    if (activities.length == 0) {\n      activities = 0;\n    }\n    console.log('-----', activities);\n    if (first) {\n      where_sql = `where activity_id in (${activities})`\n      first = false\n    }\n    else {\n      where_sql = `${where_sql} and activity_id in (${activities})`\n    }\n  }\n\n  const sql = `select A.*, B.title from hw_insurance as A join hw_activity as B \n    on A.activity_id=B.id ${where_sql} limit ${(pageIndex - 1) * limit},${limit}`\n\n  console.log('insurance_list_search_sql:', sql)\n  let data = await query(sql)\n  // for (let item in data){\n  //   let ziliao = await query(`select * from hw_insurance where activity_id=? and mobile=?`, [item.activity_id, item.mobile]);\n  //   data[item].isZiliao = ziliao.length === 0 ? 0 : 1;\n  // }\n  let count = await query(`select count(*) as count from hw_insurance as A ${where_sql}`)\n\n  ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count))\n}\n\nexport default {\n  add,\n  list_search,\n}"]}