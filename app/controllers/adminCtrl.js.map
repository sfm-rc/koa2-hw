{"version":3,"sources":["../../src/controllers/adminCtrl.js"],"names":[],"mappings":"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","file":"adminCtrl.js","sourcesContent":["\r\n\r\nimport {query} from '../models/db_connection';\r\nimport { pagination, getLinuxTimeStamp} from '../uitil';\r\n\r\n\r\n\r\n/**\r\n * 登录\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst login = async(ctx, next) =>{\r\n    const params = ctx.request.body;\r\n    const {userName, password} = params;\r\n\r\n    const sql = `select * from hw_admin where \r\n    name='${userName}' and pwd='${password}'`;\r\n    let data = await query(sql);\r\n    console.log('select admin', data);\r\n    if(data.length>0){\r\n        const admin = data[0];\r\n         ctx.cookies.set(\r\n            'admin_id', \r\n            `0123${admin.id}`,\r\n            {\r\n                // domain: 'localhost',  // 写cookie所在的域名\r\n                // path: '/index',       // 写cookie所在的路径\r\n                maxAge: 24 * 60 * 60 * 1000, // cookie有效时长\r\n                expires: new Date('2019-02-15'),  // cookie失效时间\r\n                httpOnly: false,  // 是否只用于http请求中获取\r\n                // overwrite: false  // 是否允许重写\r\n            }\r\n        );\r\n        ctx.cookies.set('permission', '1', \r\n        {\r\n            maxAge: 24 * 60 * 60 * 1000, // cookie有效时长\r\n            expires: new Date('2019-02-15'),  // cookie失效时间\r\n            httpOnly: false,  // 是否只用于http请求中获取\r\n        });\r\n        ctx.cookies.set('name', admin.name, \r\n        {\r\n            maxAge: 24 * 60 * 60 * 1000, // cookie有效时长\r\n            expires: new Date('2019-02-15'),  // cookie失效时间\r\n            httpOnly: false,  // 是否只用于http请求中获取\r\n        })\r\n        ctx.body = {code: 0, message: 'success', data};\r\n    }\r\n    else{\r\n        ctx.body = {code: 401, message: 'failed', data}\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * 退出获取报名表\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst logout = async(ctx, next) =>{\r\n    ctx.cookies.set(\r\n        'admin_id', \r\n        ''\r\n    );\r\n    ctx.cookies.set('permission', false);\r\n    ctx.cookies.set('name', '')\r\n    ctx.body = {code: 0, message: 'success', data: {}};\r\n}\r\n\r\n\r\n\r\n/**\r\n * 获取俱乐部列表,管理后台使用\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst list_search = async (ctx, next) => {\r\n  const params = ctx.request.body;\r\n  const {limit, pageIndex} = params;\r\n  const where = {};\r\n  // if(admin_id){\r\n  //   where['admin_id'] = admin_id;\r\n  // }\r\n  // if(id){\r\n  //   where['id'] = id;\r\n  // }\r\n  // if(title){\r\n  //   where['title'] = title;\r\n  // }\r\n  let where_sql = '';\r\n  let first = true;\r\n  for(let item in where){\r\n    const value = where[item];\r\n    if(first){\r\n      where_sql = `where ${item} like \"%${value}%\"`;\r\n      first = false;\r\n    }\r\n    else {\r\n      where_sql = `${where_sql} and ${item} like \"%${value}%\"`;\r\n    }\r\n  }\r\n\r\n  const sql = `select * from hw_admin ${where_sql} limit ?,?`;\r\n  console.log('list_search_sql:', sql);\r\n  let data = await query(sql, [(pageIndex-1)*limit, limit]);\r\n  let count = await query(`select count(*) as count from hw_admin ${where_sql}`);\r\n\r\n  ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count));\r\n}\r\n\r\n/**\r\n * 添加管理员 管理后台使用\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst add = async(ctx, next) => {\r\n  const params = ctx.request.body;\r\n  const {name, mobile, email, pwd, club_name, club_address, \r\n    contact_name, contact_mobile, contact_email} = params;\r\n  const sql = `INSERT INTO hw_admin VALUES (NULL, '${name}', '${mobile}', '${email}',\r\n              '${pwd}', '${club_name}', '${club_address}', '${contact_name}', '${contact_mobile}', \r\n              '${contact_email}')`;\r\n  console.log('add admin sql:', sql);\r\n  const res = await query(sql);\r\n  ctx.body = {code: 0, message: 'success', data: res}\r\n}\r\n\r\n\r\n/**\r\n * 更新管理员 管理后台使用\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst update = async(ctx, next) => {\r\n  const params = ctx.request.body;\r\n  const {id, name, mobile, email, pwd, club_name, club_address_p, club_address_c, club_address_t, club_address_detail,\r\n    contact_name, contact_mobile, contact_email} = params;\r\n  const sql = `update hw_admin set name='${name}', mobile='${mobile}', email='${email}',\r\n              pwd='${pwd}', club_name='${club_name}', \r\n              club_address_p='${club_address_p}', club_address_t='${club_address_t}', club_address_c='${club_address_c}',club_address_detail='${club_address_detail}',\r\n              contact_name='${contact_name}',\r\n              contact_mobile='${contact_mobile}', \r\n              contact_email='${contact_email}' where id=${id}`;\r\n  console.log('update admin sql:', sql);\r\n  const res = await query(sql);\r\n  ctx.body = {code: 0, message: 'success', data: res}\r\n}\r\n\r\n/**\r\n *\r\n * @param ctx\r\n * @param next\r\n * @returns {Promise.<void>}\r\n */\r\nconst get = async(ctx, next) => {\r\n  const params = ctx.request.body;\r\n  const {admin_id} = params;\r\n  const sql = `select * from hw_admin where id='${admin_id}'`;\r\n  console.log('get admin sql:', sql);\r\n  const res = await query(sql);\r\n  ctx.body = {code: 0, message: 'success', data: res}\r\n}\r\n\r\nexport default {\r\n    logout,\r\n    login,\r\n    list_search,\r\n    add,\r\n    update,\r\n  get,\r\n}"]}