{"version":3,"sources":["../../src/controllers/joinCtrl.js"],"names":["join","ctx","next","params","request","body","user_name","user_name_alias","sex","mobile","down_payment","activity_id","extra","joinUser","console","log","count","x","code","message","data","info","activities","activity","cur_num","limit_num","sql","insertId","update_res","error","list","pageIndex","limit","c_sql","list_search","admin_id","where","where_sql","first","item","value","map","id","length"],"mappings":"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","file":"joinCtrl.js","sourcesContent":["import { query } from '../models/db_connection'\r\nimport { pagination, getLinuxTimeStamp } from '../uitil'\r\n\r\n/**\r\n * 报名\r\n * @param {*} ctx\r\n * @param {*} next\r\n */\r\nconst join = async (ctx, next) => {\r\n  const params = ctx.request.body\r\n  const {user_name, user_name_alias, sex, mobile, down_payment, activity_id, extra} = params\r\n  // ---\r\n  await query('set autocommit=0;')\r\n  await query('begin;')\r\n  try {\r\n    const joinUser = await query('select count(*) as count from hw_join where activity_id=? and mobile=?', [activity_id, mobile])\r\n    console.log('joinUser---', joinUser)\r\n    if (joinUser[0].count > 0) {\r\n      x.body = {code: 110, message: '您已经报过名', data: {}}\r\n    }\r\n    else {\r\n      console.info('lock for activity_id', activity_id)\r\n      const activities = await query('select * from hw_activity where id=? for update;', [activity_id])// activity_id这行加了行锁\r\n      const activity = activities[0]\r\n      if (activity.cur_num < activity.limit_num) {\r\n        // 可以报名\r\n        const sql = `INSERT into hw_join VALUES(\r\n                NULL,'${user_name}', '${user_name_alias}', '${sex}', '${mobile}', \r\n                '${down_payment}', '${extra}', '${activity_id}', '${getLinuxTimeStamp()}'\r\n            )`\r\n        var data = await query(sql)\r\n        console.log('insert hw_join for join', data)\r\n        if (data.insertId > 0) {\r\n          const update_res = await query('UPDATE hw_activity set cur_num=cur_num+1 WHERE id=?', [activity_id])\r\n          console.log('update set ++1', update_res)\r\n          ctx.body = {code: 0, message: '报名成功', data}\r\n        }\r\n      }\r\n      else {\r\n        ctx.body = {code: 110, message: '报名失败,活动人数受限制', data: {}}\r\n      }\r\n    }\r\n  }\r\n  catch (error) {\r\n    console.error('join fail', error)\r\n    await query('ROLLBACK')\r\n    ctx.body = {code: 110, message: '报名失败,未知异常', data: {}}\r\n  }\r\n  await query('commit;')\r\n\r\n  console.info('ulock for activity_id', activity_id)\r\n  // ---\r\n}\r\n\r\n/**\r\n * 获取报名表\r\n * @param {*} ctx\r\n * @param {*} next\r\n */\r\nconst list = async (ctx, next) => {\r\n  const params = ctx.request.body\r\n  const {pageIndex, limit, activity_id} = params\r\n  const sql = `select * from hw_join where \r\n    activity_id='${activity_id}' limit ${(pageIndex - 1) * limit}, ${limit}`\r\n  const c_sql = `select count(*) as count from hw_join where \r\n    activity_id='${activity_id}'`\r\n  let data = await query(sql)\r\n  const count = (await query(c_sql))[0].count\r\n  ctx.body = Object.assign(\r\n    {code: 0, message: 'success', data},\r\n    pagination(limit, pageIndex, count)\r\n  )\r\n}\r\n\r\n/**\r\n * 获取活动报名列表,管理后台使用\r\n * @param {*} ctx\r\n * @param {*} next\r\n */\r\nconst list_search = async (ctx, next) => {\r\n  const params = ctx.request.body\r\n  const {admin_id, activity_id, user_name, user_name_alias, mobile, limit, pageIndex} = params\r\n  const where = {}\r\n  if (activity_id) {\r\n    where['activity_id'] = activity_id\r\n  }\r\n\r\n  if (user_name) {\r\n    where['user_name'] = user_name\r\n  }\r\n\r\n  if (user_name_alias) {\r\n    where['user_name'] = user_name\r\n  }\r\n\r\n  if (mobile) {\r\n    where['mobile'] = mobile\r\n  }\r\n\r\n  let where_sql = ''\r\n  let first = true\r\n  for (let item in where) {\r\n    const value = where[item]\r\n    if (first) {\r\n      where_sql = `where ${item} like \"%${value}%\"`\r\n      first = false\r\n    }\r\n    else {\r\n      where_sql = `${where_sql} and ${item} like \"%${value}%\"`\r\n    }\r\n  }\r\n\r\n  let activities = []\r\n  if (admin_id && admin_id != 0) {\r\n    activities = await query(`select id from hw_activity where admin_id=${admin_id}`)\r\n    activities = activities.map(item => item.id)\r\n    console.log('activities', activities)\r\n    if (activities.length == 0) {\r\n      activities = 0;\r\n    }\r\n    console.log('-----', activities);\r\n    if (first) {\r\n      where_sql = `where activity_id in (${activities})`\r\n      first = false\r\n    }\r\n    else {\r\n      where_sql = `${where_sql} and activity_id in (${activities})`\r\n    }\r\n  }\r\n\r\n  const sql = `select A.*, B.title from hw_join as A join hw_activity as B \r\n    on A.activity_id=B.id ${where_sql} limit ${(pageIndex - 1) * limit},${limit}`\r\n\r\n  console.log('join_list_search_sql:', sql)\r\n  let data = await query(sql)\r\n  let count = await\r\n  query(`select count(*) as count from hw_join ${where_sql}`)\r\n\r\n  ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count))\r\n}\r\n\r\nexport default {\r\n  join,\r\n  list,\r\n  list_search\r\n}\r\n"]}